{
  "version": 3,
  "sources": ["../src/behaviors/esbuild.ts", "../src/behaviors/sw.ts", "../src/behaviors/theme.ts", "../src/behaviors/index.ts"],
  "sourcesContent": ["import pRetry from \"p-retry\";\nimport { delay, getQuery, isBrowser, isDef, noop } from \"../helpers\";\nimport {\n  esbuild as $esbuild,\n  loading as $loading,\n  status as $status,\n  version as $version,\n} from \"../stores\";\n\ntype esbuild_t = typeof import(\"esbuild\");\n\nconst prefixes = [\"https://cdn.jsdelivr.net/npm\", \"https://unpkg.com\"];\nconst jsUrl = (i: number, ver: string) => `${prefixes[i]}/esbuild-wasm@${ver}/lib/browser.min.js`;\nconst wasmUrl = (i: number, ver: string) => `${prefixes[i]}/esbuild-wasm@${ver}/esbuild.wasm`;\n\nasync function load() {\n  const version = getQuery().version || \"latest\";\n  console.log(\"loading esbuild @\", version);\n\n  let module = {\n    initialize: noop,\n    build: noop,\n    formatMessages: noop,\n    transform: noop,\n    version: \"none\",\n  } as Partial<esbuild_t> as esbuild_t;\n\n  if (!isBrowser) {\n    $esbuild.set(module);\n    return;\n  }\n\n  if (import.meta.env.DEV) {\n    $status.set(\"Fetching esbuild @ \" + version);\n    ({ default: module } = await import(\"esbuild-wasm\"));\n    window.esbuild = module;\n    $version.set(module.version);\n    $status.set(\"Downloading esbuild.wasm @ \" + version);\n    await module.initialize({ wasmURL: \"http://localhost:30000/esbuild.wasm\" });\n    await module.transform(\"let a = 1\");\n    $esbuild.set(module);\n    console.log(\"loaded esbuild @\", module.version);\n    return;\n  }\n\n  for (let i = 0; i < prefixes.length; ++i) {\n    try {\n      const jsURL = jsUrl(i, version);\n      $status.set(\"Fetching \" + jsURL);\n      await pRetry(() => report(script(jsURL, () => isDef(window.esbuild))), { retries: 3 });\n      module = window.esbuild as esbuild_t;\n      $version.set(module.version);\n      const wasmURL = wasmUrl(i, module.version);\n      $status.set(\"Downloading \" + wasmURL);\n      await pRetry(() => report(module.initialize({ wasmURL })), { retries: 3 });\n      await module.transform(\"let a = 1\"); // warm up\n      break;\n    } catch {\n      continue;\n    }\n  }\n\n  if (module.version === \"none\") {\n    throw new Error(\"Error: failed to load esbuild-wasm, try refresh the page.\");\n  }\n\n  $esbuild.set(module);\n  console.log(\"loaded esbuild @\", module.version);\n}\n\nasync function report<T>(promise: Promise<T>) {\n  try {\n    return await promise;\n  } catch (err) {\n    $status.set(String(err));\n    console.error(err);\n    throw err;\n  }\n}\n\nfunction script(src: string, isReady: () => boolean) {\n  return new Promise<void>((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.onload = async () => {\n      if (isReady()) resolve();\n      for (let i = 0; i < 10; ++i) {\n        await delay(100);\n        if (isReady()) resolve();\n      }\n      reject(new Error(`Failed to import ${src}.`));\n    };\n    script.onerror = () => {\n      script.remove();\n      reject();\n    };\n    script.src = src;\n    document.head.append(script);\n  });\n}\n\n(async () => {\n  try {\n    await load();\n    $status.set(\"Ready.\");\n    $loading.set(false);\n  } catch (err) {\n    $status.set(String(err));\n    console.error(err);\n  }\n})();\n", "if (import.meta.env.DEV) {\n  navigator.serviceWorker?.getRegistrations().then((rs) => rs.forEach((r) => r.unregister()));\n} else {\n  navigator.serviceWorker\n    ?.register(\"./sw.js\")\n    .then((e) => console.log(\"registered sw.js in scope:\", e.scope))\n    .catch((e) => console.log(\"failed to register sw.js:\", e));\n}\n", "import { isBrowser } from \"../helpers\";\nimport { theme } from \"../stores\";\n\nconst mediaQuery =\n  isBrowser && window.matchMedia ? matchMedia(\"(prefers-color-scheme: dark)\") : null;\n\nif (mediaQuery) {\n  const update = () => theme.set(mediaQuery.matches ? \"dark\" : \"light\");\n  mediaQuery.addEventListener(\"change\", update);\n  update();\n}\n\ntheme.subscribe((value) => {\n  if (isBrowser) {\n    document.body.dataset.theme = value;\n  }\n});\n", "import \"./esbuild\";\nimport \"./sw\";\nimport \"./theme\";\n\nimport(\"./editor\");\n"],
  "mappings": "kxJAWA,GAAM,GAAW,CAAC,+BAAgC,mBAAmB,EAC/D,EAAQ,CAAC,EAAW,IAAgB,GAAG,EAAS,mBAAmB,uBACnE,EAAU,CAAC,EAAW,IAAgB,GAAG,EAAS,mBAAmB,iBAE3E,kBAAsB,CACpB,GAAM,GAAU,EAAS,EAAE,SAAW,SACtC,QAAQ,IAAI,oBAAqB,CAAO,EAExC,GAAI,GAAS,CACX,WAAY,EACZ,MAAO,EACP,eAAgB,EAChB,UAAW,EACX,QAAS,MACX,EAEA,GAAI,CAAC,EAAW,CACd,EAAS,IAAI,CAAM,EACnB,MACF,CAeA,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,EAAE,EACrC,GAAI,CACF,GAAM,GAAQ,EAAM,EAAG,CAAO,EAC9B,EAAQ,IAAI,YAAc,CAAK,EAC/B,KAAM,GAAO,IAAM,EAAO,EAAO,EAAO,IAAM,EAAM,OAAO,OAAO,CAAC,CAAC,EAAG,CAAE,QAAS,CAAE,CAAC,EACrF,EAAS,OAAO,QAChB,EAAS,IAAI,EAAO,OAAO,EAC3B,GAAM,GAAU,EAAQ,EAAG,EAAO,OAAO,EACzC,EAAQ,IAAI,eAAiB,CAAO,EACpC,KAAM,GAAO,IAAM,EAAO,EAAO,WAAW,CAAE,SAAQ,CAAC,CAAC,EAAG,CAAE,QAAS,CAAE,CAAC,EACzE,KAAM,GAAO,UAAU,WAAW,EAClC,KACF,MAAE,CACA,QACF,CAGF,GAAI,EAAO,UAAY,OACrB,KAAM,IAAI,OAAM,2DAA2D,EAG7E,EAAS,IAAI,CAAM,EACnB,QAAQ,IAAI,mBAAoB,EAAO,OAAO,CAChD,CAEA,iBAAyB,EAAqB,CAC5C,GAAI,CACF,MAAO,MAAM,EACf,OAAS,EAAP,CACA,QAAQ,IAAI,OAAO,CAAG,CAAC,EACvB,QAAQ,MAAM,CAAG,EACX,CACR,CACF,CAEA,WAAgB,EAAa,EAAwB,CACnD,MAAO,IAAI,SAAc,CAAC,EAAS,IAAW,CAC5C,GAAM,GAAS,SAAS,cAAc,QAAQ,EAC9C,EAAO,OAAS,SAAY,CAC1B,AAAI,EAAQ,GAAG,EAAQ,EACvB,OAAS,GAAI,EAAG,EAAI,GAAI,EAAE,EACxB,KAAM,GAAM,GAAG,EACX,EAAQ,GAAG,EAAQ,EAEzB,EAAO,GAAI,OAAM,oBAAoB,IAAM,CAAC,CAC9C,EACA,EAAO,QAAU,IAAM,CACrB,EAAO,OAAO,EACd,EAAO,CACT,EACA,EAAO,IAAM,EACb,SAAS,KAAK,OAAO,CAAM,CAC7B,CAAC,CACH,CAEA,AAAC,UAAY,CACX,GAAI,CACF,KAAM,GAAK,EACX,EAAQ,IAAI,QAAQ,EACpB,EAAS,IAAI,EAAK,CACpB,OAAS,EAAP,CACA,EAAQ,IAAI,OAAO,CAAG,CAAC,EACvB,QAAQ,MAAM,CAAG,CACnB,CACF,GAAG,EC1GD,UAAU,eACN,SAAS,SAAS,EACnB,KAAK,AAAC,GAAM,QAAQ,IAAI,6BAA8B,EAAE,KAAK,CAAC,EAC9D,MAAM,AAAC,GAAM,QAAQ,IAAI,4BAA6B,CAAC,CAAC,ECH7D,GAAM,GACJ,GAAa,OAAO,WAAa,WAAW,8BAA8B,EAAI,KAEhF,GAAI,EAAY,CACd,GAAM,GAAS,IAAM,EAAM,IAAI,EAAW,QAAU,OAAS,OAAO,EACpE,EAAW,iBAAiB,SAAU,CAAM,EAC5C,EAAO,CACT,CAEA,EAAM,UAAU,AAAC,GAAU,CACzB,AAAI,GACF,UAAS,KAAK,QAAQ,MAAQ,EAElC,CAAC,ECZD,OAAO",
  "names": []
}
