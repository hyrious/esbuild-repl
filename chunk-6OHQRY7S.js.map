{
  "version": 3,
  "sources": ["../src/stores/build.ts"],
  "sourcesContent": ["import type { BuildOptions, Message, Plugin } from \"esbuild\";\nimport { derived, Readable, writable } from \"svelte/store\";\nimport { isBrowser, render } from \"../helpers\";\nimport { esbuild, time, timeEnd } from \"./index\";\n\nexport interface Module {\n  name: string;\n  contents: string;\n  isEntry: boolean;\n}\n\nexport const modules = writable<Module[]>([\n  { name: \"main.js\", contents: \"export let a = 1\", isEntry: true },\n]);\nexport const buildOptions = writable<BuildOptions>({\n  bundle: true,\n  format: \"esm\",\n  splitting: true,\n});\n\nexport interface Outputs {\n  files?: Module[];\n  errors?: Message[];\n  warnings?: Message[];\n}\n\nfunction normalizeName(path: string) {\n  return \"/\" + path.replace(/^[.\\/]*/g, \"\");\n}\n\nfunction stripExt(path: string) {\n  const i = path.lastIndexOf(\".\");\n  return i !== -1 ? path.slice(0, i) : path;\n}\n\nfunction repl($modules: Module[]): Plugin {\n  return {\n    name: \"repl\",\n    setup({ onResolve, onLoad }) {\n      onResolve({ filter: /.*/ }, (args) => {\n        const absPath = normalizeName(args.path);\n\n        let mod = $modules.find((e) => normalizeName(e.name) === absPath);\n        if (mod) return { path: normalizeName(mod.name), pluginData: mod };\n\n        mod = $modules.find((e) => stripExt(normalizeName(e.name)) === stripExt(absPath));\n        if (mod) return { path: normalizeName(mod.name), pluginData: mod };\n\n        return { path: args.path, external: true };\n      });\n\n      onLoad({ filter: /.*/ }, (args) => {\n        const mod: Module | undefined = args.pluginData;\n        const loader = stripExt(args.path) === args.path ? \"js\" : \"default\";\n        if (mod) return { contents: mod.contents, loader };\n      });\n    },\n  };\n}\n\nexport const outputs: Readable<Outputs> = derived(\n  [esbuild, modules, buildOptions],\n  ([$esbuild, $modules, $buildOptions], set) => {\n    if (!$esbuild) return;\n\n    const entryPoints = $modules.filter((e) => e.isEntry).map((e) => e.name);\n    if (entryPoints.length === 0) return set({});\n\n    const buildOptions = { entryPoints, ...$buildOptions };\n    (buildOptions.plugins ||= []).unshift(repl($modules));\n    buildOptions.outdir = \"/\";\n    buildOptions.write = false;\n    buildOptions.allowOverwrite = true;\n\n    time();\n    $esbuild\n      .build(buildOptions as BuildOptions & { write: false })\n      .then(({ outputFiles, errors, warnings }) => {\n        const files = outputFiles.map(\n          (file) =>\n            ({\n              name: file.path,\n              contents: file.text,\n              isEntry: false,\n            } as Module)\n        );\n        set({ files, errors, warnings });\n      })\n      .catch(set)\n      .finally(timeEnd);\n  },\n  { files: [{ name: \"main.js\", contents: \"// initializing\", isEntry: false }] } as Outputs\n);\n\nexport const errorsHTML = derived([esbuild, outputs], ([$esbuild, $outputs], set) => {\n  if (!$esbuild) return;\n  const { errors, warnings } = $outputs;\n  Promise.all([\n    errors?.length ? $esbuild.formatMessages(errors, { color: true, kind: \"error\" }) : null,\n    warnings?.length ? $esbuild.formatMessages(warnings, { color: true, kind: \"warning\" }) : null,\n  ]).then((raw) => {\n    const strings = (raw as string[][]).reduce((sum, xs) => (xs ? [...sum, ...xs] : sum), []);\n    set(strings.map((ansi) => render(ansi)).join(\"\\n\"));\n  });\n});\n\nisBrowser &&\n  Object.assign(window, {\n    stores_build: { modules, buildOptions, outputs },\n  });\n"],
  "mappings": "uFAWO,GAAM,GAAU,EAAmB,CACxC,CAAE,KAAM,UAAW,SAAU,mBAAoB,QAAS,MAE/C,EAAe,EAAuB,CACjD,OAAQ,GACR,OAAQ,MACR,UAAW,KASb,WAAuB,EAAc,CACnC,MAAO,IAAM,EAAK,QAAQ,WAAY,IAGxC,WAAkB,EAAc,CAC9B,GAAM,GAAI,EAAK,YAAY,KAC3B,MAAO,KAAM,GAAK,EAAK,MAAM,EAAG,GAAK,EAGvC,WAAc,EAA4B,CACxC,MAAO,CACL,KAAM,OACN,MAAM,CAAE,YAAW,UAAU,CAC3B,EAAU,CAAE,OAAQ,MAAQ,AAAC,GAAS,CACpC,GAAM,GAAU,EAAc,EAAK,MAE/B,EAAM,EAAS,KAAK,AAAC,GAAM,EAAc,EAAE,QAAU,GACzD,MAAI,GAAY,CAAE,KAAM,EAAc,EAAI,MAAO,WAAY,GAE7D,GAAM,EAAS,KAAK,AAAC,GAAM,EAAS,EAAc,EAAE,SAAW,EAAS,IACpE,EAAY,CAAE,KAAM,EAAc,EAAI,MAAO,WAAY,GAEtD,CAAE,KAAM,EAAK,KAAM,SAAU,OAGtC,EAAO,CAAE,OAAQ,MAAQ,AAAC,GAAS,CACjC,GAAM,GAA0B,EAAK,WAC/B,EAAS,EAAS,EAAK,QAAU,EAAK,KAAO,KAAO,UAC1D,GAAI,EAAK,MAAO,CAAE,SAAU,EAAI,SAAU,cAM3C,GAAM,GAA6B,EACxC,CAAC,EAAS,EAAS,GACnB,CAAC,CAAC,EAAU,EAAU,GAAgB,IAAQ,CAC5C,GAAI,CAAC,EAAU,OAEf,GAAM,GAAc,EAAS,OAAO,AAAC,GAAM,EAAE,SAAS,IAAI,AAAC,GAAM,EAAE,MACnE,GAAI,EAAY,SAAW,EAAG,MAAO,GAAI,IAEzC,GAAM,GAAe,CAAE,iBAAgB,GACvC,AAAC,GAAa,UAAY,IAAI,QAAQ,EAAK,IAC3C,EAAa,OAAS,IACtB,EAAa,MAAQ,GACrB,EAAa,eAAiB,GAE9B,IACA,EACG,MAAM,GACN,KAAK,CAAC,CAAE,cAAa,SAAQ,cAAe,CAC3C,GAAM,GAAQ,EAAY,IACxB,AAAC,GACE,EACC,KAAM,EAAK,KACX,SAAU,EAAK,KACf,QAAS,MAGf,EAAI,CAAE,QAAO,SAAQ,eAEtB,MAAM,GACN,QAAQ,IAEb,CAAE,MAAO,CAAC,CAAE,KAAM,UAAW,SAAU,kBAAmB,QAAS,OAGxD,EAAa,EAAQ,CAAC,EAAS,GAAU,CAAC,CAAC,EAAU,GAAW,IAAQ,CACnF,GAAI,CAAC,EAAU,OACf,GAAM,CAAE,SAAQ,YAAa,EAC7B,QAAQ,IAAI,CACV,GAAQ,OAAS,EAAS,eAAe,EAAQ,CAAE,MAAO,GAAM,KAAM,UAAa,KACnF,GAAU,OAAS,EAAS,eAAe,EAAU,CAAE,MAAO,GAAM,KAAM,YAAe,OACxF,KAAK,AAAC,GAAQ,CACf,GAAM,GAAW,EAAmB,OAAO,CAAC,EAAK,IAAQ,EAAK,CAAC,GAAG,EAAK,GAAG,GAAM,EAAM,IACtF,EAAI,EAAQ,IAAI,AAAC,GAAS,EAAO,IAAO,KAAK;AAAA,QAIjD,GACE,OAAO,OAAO,OAAQ,CACpB,aAAc,CAAE,UAAS,eAAc",
  "names": []
}
