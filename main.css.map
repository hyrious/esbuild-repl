{
  "version": 3,
  "sources": ["../src/assets/iconfont.css", "../src/base.css", "Header.svelte", "Repl.svelte", "Transform.svelte", "Layout.svelte", "Options.svelte", "Boolean.svelte", "OptionEntry.svelte", "Record.svelte", "Select.svelte", "Status.svelte", "Build.svelte", "Editor.svelte"],
  "sourcesContent": ["@font-face {\n  font-family: \"Iconify Explorer Font\";\n  src: url(\"./iconfont.eot\");\n  src: url(\"./iconfont.eot\") format(\"embedded-opentype\"),\n    url(\"./iconfont.ttf\") format(\"truetype\"),\n    url(\"./iconfont.woff\") format(\"woff\"),\n    url(\"./iconfont.woff2\") format(\"woff2\"), url(\"./iconfont.svg\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n.i {\n  font-family: \"Iconify Explorer Font\" !important;\n  font-size: 1em;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.i.mdi\\:close:before {\n  content: \"\\e001\";\n}\n\n.i.mdi\\:minus:before {\n  content: \"\\e002\";\n}\n\n.i.mdi\\:moon-waxing-crescent:before {\n  content: \"\\e003\";\n}\n\n.i.mdi\\:plus:before {\n  content: \"\\e004\";\n}\n\n.i.mdi\\:refresh:before {\n  content: \"\\e005\";\n}\n\n.i.mdi\\:white-balance-sunny:before {\n  content: \"\\e006\";\n}\n", "@import \"https://cdn.jsdelivr.net/npm/sanitize.css\";\n@import \"./assets/iconfont.css\";\n\n:root {\n  --gap: 6px;\n  --black: #222;\n  --highlight: #ffcf00;\n  --red: #e54245;\n  --green: #608b00;\n  --blue: #0089b0;\n  --cyan: #008c98;\n  --magenta: #776eeb;\n  --yellow: #c76300;\n  --dim: #777;\n  --white: #fff;\n  --mono: \"Noto Sans Mono\", monospace;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  font: 16px/140% sans-serif;\n  overscroll-behavior: contain;\n  overflow: auto;\n  overflow-y: scroll;\n  overflow-y: overlay;\n  scrollbar-width: auto;\n}\n\nbody::-webkit-scrollbar {\n  height: calc(var(--gap) * 2);\n  width: calc(var(--gap) * 2);\n}\n\nbody::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\nbody::-webkit-scrollbar-thumb {\n  background-color: rgba(127, 127, 127, 0.1);\n  background-color: transparent;\n  transition: background-color 0.4s;\n}\n\nbody:hover::-webkit-scrollbar-thumb {\n  background-color: rgba(127, 127, 127, 0.1);\n}\n\nbody::-webkit-scrollbar-thumb:hover {\n  background-color: rgba(127, 127, 127, 0.2);\n}\n\nbody::-webkit-scrollbar-thumb:active {\n  background-color: rgba(127, 127, 127, 0.5);\n}\n\nbody::-webkit-scrollbar-thumb:vertical {\n  min-height: 50px;\n}\n\nbody::-webkit-scrollbar-thumb:horizontal {\n  min-width: 50px;\n}\n\n#app {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}\n\nbody:not([data-theme=\"dark\"]) {\n  color-scheme: light;\n  --bg: #fff;\n  --bg-on: #fff;\n  --fg: #222;\n  --fg-on: #000;\n  --pre: #222;\n  --pre-dim: #777;\n  --pre-val: #870;\n}\n\nbody[data-theme=\"dark\"] {\n  color-scheme: dark;\n  --bg: #191919;\n  --bg-on: #333;\n  --fg: #aaa;\n  --fg-on: #ddd;\n  --pre: #ccc;\n  --pre-dim: #999;\n  --pre-val: #cb8;\n}\n\n@media (prefers-color-scheme: dark) {\n  body:not([data-theme=\"light\"]) {\n    color-scheme: dark;\n    --bg: #191919;\n    --bg-on: #333;\n    --fg: #aaa;\n    --fg-on: #ddd;\n    --pre: #ccc;\n    --pre-dim: #999;\n    --pre-val: #cb8;\n  }\n}\n\nbody {\n  background-color: var(--bg);\n  color: var(--fg);\n}\n\na {\n  color: inherit;\n}\n\ntextarea,\ninput {\n  color: var(--fg-on);\n}\n\npre {\n  color: var(--pre);\n}\n\npre,\ntextarea,\ninput,\nselect {\n  outline: none;\n  background-color: rgba(127, 127, 127, 0.1);\n  border: 1px solid rgba(127, 127, 127, 0.5);\n  border-radius: var(--gap);\n  padding: calc(var(--gap) * 1.5);\n}\n\npre,\ncode,\ntextarea,\ninput {\n  margin: 0;\n  font: 14px/140% var(--mono);\n}\n\ntextarea {\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\nstrong {\n  color: var(--fg-on);\n}\n\n.color-red {\n  color: var(--red);\n}\n.color-green {\n  color: var(--green);\n}\n.color-blue {\n  color: var(--blue);\n}\n.color-cyan {\n  color: var(--cyan);\n}\n.color-magenta {\n  color: var(--magenta);\n}\n.color-yellow {\n  color: var(--yellow);\n}\n.color-dim {\n  color: var(--dim);\n}\n.color-red-bg-red {\n  color: var(--red);\n  background-color: var(--red);\n}\n.color-red-bg-white {\n  color: var(--white);\n  background-color: var(--red);\n}\n.color-green-bg-green {\n  color: var(--green);\n  background-color: var(--green);\n}\n.color-green-bg-white {\n  color: var(--white);\n  background-color: var(--green);\n}\n.color-blue-bg-blue {\n  color: var(--blue);\n  background-color: var(--blue);\n}\n.color-blue-bg-white {\n  color: var(--white);\n  background-color: var(--blue);\n}\n.color-cyan-bg-cyan {\n  color: var(--cyan);\n  background-color: var(--cyan);\n}\n.color-cyan-bg-black {\n  color: var(--black);\n  background-color: var(--cyan);\n}\n.color-magenta-bg-magenta {\n  color: var(--magenta);\n  background-color: var(--magenta);\n}\n.color-magenta-bg-black {\n  color: var(--black);\n  background-color: var(--magenta);\n}\n.color-yellow-bg-yellow {\n  color: var(--yellow);\n  background-color: var(--yellow);\n}\n.color-yellow-bg-black {\n  color: var(--black);\n  background-color: var(--yellow);\n}\n\n.hljs-comment,\n.hljs-keyword,\n.hljs-literal {\n  color: var(--pre-dim);\n}\n\n.hljs-regexp,\n.hljs-string,\n.hljs-number,\n.hljs-tag {\n  color: var(--pre-val);\n}\n", "<script context=\"module\">\n  const lightIcon = \"white-balance-sunny\";\n  const darkIcon = \"moon-waxing-crescent\";\n  const matchMedia = typeof window === 'undefined'\n    ? () => ({ matches: false, addEventListener() {}, removeEventListener() {} })\n    : window.matchMedia;\n  const prefersDarkMode = matchMedia(\"(prefers-color-scheme: dark)\");\n</script>\n\n<script>\n  import { onMount, onDestroy } from \"svelte\";\n\n  import mode from \"../stores/mode\";\n  import theme from \"../stores/theme\";\n\n  let isDark = prefersDarkMode.matches;\n  const updateDark = e => {\n    isDark = e.matches;\n  };\n\n  onMount(() => {\n    prefersDarkMode.addEventListener(\"change\", updateDark);\n  });\n\n  onDestroy(() => {\n    prefersDarkMode.removeEventListener(\"change\", updateDark);\n  });\n\n  $: iconName = $theme === \"light\"\n              ? lightIcon\n              : $theme === \"dark\"\n              ? darkIcon\n              : isDark ? darkIcon : lightIcon;\n\n  function switchTheme() {\n    if ($theme === \"light\") {\n      $theme = \"dark\";\n    } else if ($theme === \"dark\") {\n      $theme = \"light\";\n    } else {\n      $theme = isDark ? \"light\" : \"dark\";\n    }\n  }\n</script>\n\n<header>\n  <h1>\n    <a href=\"https://esbuild.github.io\" target=\"_blank\" rel=\"noreferrer\">esbuild</a>\n    <span>.</span>\n    <a href=\"https://github.com/hyrious/esbuild-repl\" target=\"_blank\" rel=\"noreferrer\">repl</a>\n  </h1>\n  <nav on:change={(ev) => ($mode = ev.target.value)}>\n    <input name=\"mode\" id=\"mode-transform\" value=\"transform\" type=\"radio\" checked={$mode === \"transform\"} />\n    <label for=\"mode-transform\">Transform</label>\n    <input name=\"mode\" id=\"mode-build\" value=\"build\" type=\"radio\" checked={$mode === \"build\"} />\n    <label for=\"mode-build\">Build</label>\n  </nav>\n  <i on:click={switchTheme} class=\"i mdi:{iconName}\" title=\"theme: {$theme}\"></i>\n</header>\n\n<style>\n  header {\n    padding: calc(var(--gap) * 2) var(--gap) var(--gap);\n    display: flex;\n    align-items: center;\n  }\n  header a {\n    text-decoration: none;\n  }\n  header a:hover {\n    color: var(--fg-on);\n    text-decoration: underline;\n  }\n  h1 {\n    margin: 0;\n    padding: 0 var(--gap) 0 calc(var(--gap) * 2);\n    display: inline-flex;\n    font-size: 16px;\n  }\n  nav {\n    flex-grow: 1;\n    display: inline-flex;\n  }\n  label {\n    position: relative;\n    text-align: center;\n    user-select: none;\n    cursor: pointer;\n  }\n  label:hover {\n    text-decoration: underline;\n  }\n  label[for=\"mode-transform\"] {\n    min-width: 90px;\n  }\n  label[for=\"mode-build\"] {\n    min-width: 50px;\n  }\n  input[type=\"radio\"] {\n    display: none;\n  }\n  input[type=\"radio\"]:checked + label {\n    color: var(--fg-on);\n    font-weight: bold;\n  }\n  i {\n    color: currentColor;\n    padding: 0 calc(var(--gap) * 2) 0 var(--gap);\n    cursor: pointer;\n  }\n  @media screen and (max-width: 720px) {\n    header {\n      padding: var(--gap) var(--gap) 0;\n    }\n    h1 {\n      display: none;\n    }\n  }\n</style>\n", "<script>\n  import Transform from \"./repl/Transform.svelte\";\n  import Build from \"./repl/build/Build.svelte\";\n</script>\n\n<main>\n  <Transform />\n  <Build />\n</main>\n\n<style>\n  main {\n    flex-grow: 1;\n  }\n</style>\n", "<svelte:options immutable />\n\n<script>\n  import { onMount } from \"svelte\";\n  import { hljs_action } from \"../../behaviors/hljs\";\n\n  import Layout from \"./Layout.svelte\";\n  import Status from \"./Status.svelte\";\n  import mode from \"../../stores/mode\";\n  import { ready, error } from \"../../stores/esbuild\";\n  import { code, config, elapsed } from \"../../stores/transform\";\n  import { argsToConfig, configToArgs } from \"../../helpers/cli\";\n\n  let transformInput;\n  let transformOptions = \"\";\n  let transformResult = \"// initializing\";\n  let transformErrors = [];\n  let transformWarnings = [];\n\n  async function transform($code, $config) {\n    try {\n      const timeStart = performance.now();\n      const result = await esbuild.transform($code, $config);\n      $elapsed = (performance.now() - timeStart).toFixed(2);\n      transformResult = result.code;\n      transformErrors = [];\n      transformWarnings = result.warnings;\n      $error = false;\n    } catch (err) {\n      transformResult = \"\";\n      if (err.errors) {\n        transformErrors = err.errors;\n        transformWarnings = err.warnings;\n      } else {\n        $error = err;\n      }\n    }\n  }\n\n  $: $ready && $mode === \"transform\" && transform($code, $config);\n  $: transformOptions = configToArgs($config).join(\" \");\n  $: loader = $config.loader;\n\n  function updateConfig() {\n    const newConfig = argsToConfig(transformOptions);\n    if (newConfig) {\n      $config = newConfig;\n    }\n  }\n\n  onMount(() =>\n    requestAnimationFrame(() => {\n      if ($mode === \"transform\") transformInput.focus();\n    })\n  );\n</script>\n\n<Layout mode=\"transform\">\n  <svelte:fragment slot=\"input\">\n    <textarea\n      slot=\"input\"\n      class=\"editor\"\n      spellcheck=\"false\"\n      bind:value={$code}\n      bind:this={transformInput}\n    />\n    <input\n      spellcheck=\"false\"\n      autocomplete=\"off\"\n      placeholder=\"--loader=js\"\n      bind:value={transformOptions}\n      on:change={updateConfig}\n    />\n  </svelte:fragment>\n  <svelte:fragment slot=\"output\">\n    <pre class=\"chunk\" use:hljs_action={{ code: transformResult, loader }} />\n    <Status\n      errors={transformErrors}\n      warnings={transformWarnings}\n      elapsed={$elapsed}\n    />\n  </svelte:fragment>\n</Layout>\n\n<style>\n  textarea {\n    display: block;\n    width: 100%;\n    height: 100%;\n    resize: none;\n  }\n  pre {\n    white-space: pre-wrap;\n    word-break: break-all;\n    cursor: text;\n    max-height: 80vh;\n  }\n</style>\n", "<script>\n  import Options from \"./build/Options.svelte\";\n  import { modules, outputs } from \"../../stores/build\";\n  import { DefaultModule } from \"../../helpers/query\";\n\n  export let mode;\n\n  let optionsOpen = false;\n\n  function startOver() {\n    $modules = [{ ...DefaultModule }];\n  }\n\n  function toggleOptions() {\n    optionsOpen = !optionsOpen;\n  }\n\n  function closeOptions() {\n    optionsOpen = false;\n  }\n</script>\n\n<div class=\"repl {mode}\">\n  <div class=\"left\">\n    {#if mode === \"build\"}\n      <h3>\n        <span>ES6 modules go in&hellip;</span>\n        <button on:click={startOver}>Start over</button>\n      </h3>\n    {/if}\n    <div class=\"input\">\n      <slot name=\"input\" />\n    </div>\n  </div>\n  <div class=\"right\">\n    {#if mode === \"build\"}\n      <h3>\n        <span>&hellip;{#if $outputs.length > 1}chunks come{:else}bundle comes{/if} out</span>\n        <button class:open={optionsOpen} on:click={toggleOptions}>Options</button>\n        <Options open={optionsOpen} on:close={closeOptions} />\n      </h3>\n    {/if}\n    <div class=\"output\">\n      <slot name=\"output\" />\n    </div>\n  </div>\n</div>\n\n<style>\n  :global([data-mode=\"transform\"] .repl.transform),\n  :global([data-mode=\"build\"] .repl.build) {\n    display: grid !important;\n  }\n  .repl {\n    display: none;\n    grid-template-columns: 1fr 1fr;\n    padding: var(--gap) calc(var(--gap) * 2);\n    gap: calc(var(--gap) * 2);\n    background-color: var(--bg);\n  }\n  @media screen and (max-width: 720px) {\n    .repl {\n      grid-template-columns: 1fr;\n      gap: var(--gap);\n    }\n  }\n  h3 {\n    margin: 0;\n    padding-bottom: var(--gap);\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 32px;\n    position: relative;\n  }\n  h3 button {\n    position: absolute;\n    right: 0;\n    border: none;\n    border-radius: var(--gap);\n    outline: none;\n    background-color: rgba(127, 127, 127, 0.1);\n    color: var(--fg);\n    padding: calc(var(--gap) * 1.5) calc(var(--gap) * 2);\n    display: inline;\n    cursor: pointer;\n    line-height: 1;\n  }\n  h3 button:hover {\n    color: var(--fg-on);\n    background-color: rgba(127, 127, 127, 0.2);\n    outline: 1px solid var(--highlight);\n    outline-offset: 2px;\n  }\n  h3 button:active,\n  h3 button.open {\n    color: var(--black);\n    background-color: var(--highlight);\n  }\n  .input,\n  .output {\n    display: flex;\n    flex-direction: column;\n    gap: var(--gap);\n  }\n</style>\n", "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { options } from \"../../../stores/build\";\n  import Boolean from \"./scalar/Boolean.svelte\";\n  import OptionEntry from \"./OptionEntry.svelte\";\n\n  export let open;\n\n  let dispatch = createEventDispatcher();\n\n  function onClose(ev) {\n    ev.stopPropagation();\n    dispatch(\"close\", ev);\n  }\n</script>\n\n<section class:open>\n  <h4>\n    <a href=\"https://esbuild.github.io/api\">Options</a>\n    <button on:click={onClose}>\n      <span class=\"close\">close</span>\n      <i class=\"i mdi:close\" />\n    </button>\n  </h4>\n  <p>\n    Note: not all options are supported, try use esbuild in the browser console or install it locally.\n  </p>\n  {#if open}\n    <div class=\"options\">\n      <OptionEntry\n        name=\"bundle\"\n        type=\"boolean\"\n        bind:value={$options.bundle}\n      />\n      <OptionEntry\n        name=\"define\"\n        type=\"record\"\n        placeholder=\"DEBUG=1\"\n        bind:value={$options.define}\n      />\n      <OptionEntry\n        name=\"format\"\n        type=\"select\"\n        options={[\"\", \"iife\", \"cjs\", \"esm\"]}\n        bind:value={$options.format}\n      />\n      <OptionEntry\n        name=\"loader\"\n        type=\"record\"\n        placeholder=\".svg=dataurl\"\n        bind:value={$options.loader}\n      />\n      <OptionEntry\n        name=\"minify\"\n        type=\"boolean\"\n        bind:value={$options.minify}\n      />\n      <OptionEntry\n        name=\"platform\"\n        type=\"select\"\n        options={[\"\", \"browser\", \"node\", \"neutral\"]}\n        bind:value={$options.platform}\n      />\n      <OptionEntry\n        name=\"sourcemap\"\n        type=\"select\"\n        options={[\"\", \"true\", \"external\", \"inline\", \"both\"]}\n        bind:value={$options.sourcemap}\n      />\n      <OptionEntry\n        name=\"splitting\"\n        type=\"boolean\"\n        bind:value={$options.splitting}\n      />\n      <OptionEntry\n        name=\"target\"\n        type=\"list\"\n        placeholder=\"es6\"\n        bind:value={$options.target}\n      />\n      <h5>Advanced options</h5>\n      <OptionEntry\n        name=\"asset-names\"\n        type=\"text\"\n        placeholder=\"[dir]/[name]-[hash]\"\n        bind:value={$options.assetNames}\n      />\n      <OptionEntry\n        name=\"charset\"\n        type=\"select\"\n        options={[\"\", \"utf8\", \"ascii\"]}\n        bind:value={$options.charset}\n      />\n      <OptionEntry\n        name=\"chunk-names\"\n        type=\"text\"\n        placeholder=\"[dir]/[name]-[hash]\"\n        bind:value={$options.chunkNames}\n      />\n      <OptionEntry\n        name=\"entry-names\"\n        type=\"text\"\n        placeholder=\"[dir]/[name]-[hash]\"\n        bind:value={$options.chunkNames}\n      />\n      <OptionEntry\n        name=\"global-name\"\n        type=\"text\"\n        bind:value={$options.globalName}\n      />\n      <OptionEntry\n        name=\"ignore-annotations\"\n        type=\"boolean\"\n        bind:value={$options.ignoreAnnotations}\n      />\n      <OptionEntry\n        name=\"jsx\"\n        type=\"select\"\n        options={[\"\", \"transform\", \"preserve\"]}\n        bind:value={$options.jsx}\n      />\n      <OptionEntry\n        name=\"jsx-factory\"\n        type=\"text\"\n        placeholder=\"h\"\n        bind:value={$options.jsxFactory}\n      />\n      <OptionEntry\n        name=\"jsx-fragment\"\n        type=\"text\"\n        placeholder=\"Fragment\"\n        bind:value={$options.jsxFragment}\n      />\n      <OptionEntry\n        name=\"keep-names\"\n        type=\"boolean\"\n        bind:value={$options.keepNames}\n      />\n      <OptionEntry\n        name=\"legal-comments\"\n        type=\"select\"\n        options={[\"\", \"none\", \"inline\", \"eof\", \"linked\", \"external\"]}\n        bind:value={$options.legalComments}\n      />\n      <OptionEntry\n        name=\"out-extension\"\n        type=\"record\"\n        placeholder=\".js=.mjs\"\n        bind:value={$options.outExtension}\n      />\n      <OptionEntry\n        name=\"pure\"\n        type=\"list\"\n        placeholder=\"console.log\"\n        bind:value={$options.pure}\n      />\n      <OptionEntry\n        name=\"resolve-extensions\"\n        type=\"list\"\n        placeholder=\".tsx,.ts,.jsx,.js,.css,.json\"\n        bind:value={$options.resolveExtensions}\n      />\n      <OptionEntry\n        name=\"sources-content\"\n        type=\"boolean\"\n        bind:value={$options.sourcesContent}\n      />\n      <OptionEntry\n        name=\"tree-shaking\"\n        type=\"boolean\"\n        bind:value={$options.treeShaking}\n      />\n    </div>\n  {/if}\n</section>\n\n<style>\n  section {\n    position: absolute;\n    right: 0;\n    top: 100%;\n    width: 400px;\n    padding: calc(var(--gap) * 2);\n    color: var(--fg);\n    background-color: var(--bg-on);\n    border: 1px solid rgba(127, 127, 127, 0.5);\n    border-radius: var(--gap);\n    box-shadow: 0 0 6px 3px rgba(0, 0, 0, 0.1);\n    user-select: text;\n    cursor: default;\n    z-index: 1;\n    line-height: 1.4;\n    display: none;\n    max-height: 80vh;\n    overflow-y: scroll;\n  }\n  h5 {\n    margin: 0;\n    font-size: 14px;\n    font-weight: bold;\n    grid-column: 1 / span 2;\n  }\n  @media screen and (max-width: 720px) {\n    section {\n      position: fixed;\n      inset: 0;\n      width: 100%;\n      max-height: unset;\n    }\n  }\n  .open {\n    display: block;\n  }\n  h4 {\n    margin: 0;\n    text-align: left;\n    font-size: 14px;\n  }\n  h4 a {\n    text-decoration: none;\n  }\n  h4 a:hover {\n    text-decoration: underline;\n  }\n  h4 button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 0.3em;\n    color: var(--red);\n    background-color: transparent;\n    border: none;\n    outline: none;\n    opacity: 0.4;\n    transition: opacity 0.2s;\n    display: inline-flex;\n    align-items: center;\n    line-height: 1;\n    cursor: pointer;\n  }\n  @media screen and (max-width: 720px) {\n    h4 button {\n      font-size: 16px;\n      padding: 0.8em;\n    }\n  }\n  .close {\n    position: absolute;\n    right: 100%;\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n  h4 button:hover,\n  h4 button:hover .close {\n    opacity: 1;\n  }\n  .options {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-gap: calc(var(--gap) * 2) var(--gap);\n    align-items: center;\n    text-align: left;\n  }\n  p {\n    margin: var(--gap) 0;\n    text-align: start;\n    font-size: 14px;\n  }\n</style>\n", "<script>\n  export let checked;\n\n  $: indeterminate = typeof checked !== \"boolean\";\n</script>\n\n<label>\n  <input type=\"checkbox\" bind:checked {indeterminate} />\n  <code>{String(checked)}</code>\n</label>\n\n<style>\n  label {\n    display: inline-flex;\n    gap: var(--gap);\n    align-items: center;\n    cursor: pointer;\n  }\n  code {\n    color: var(--fg-on);\n  }\n</style>\n", "<script>\n  import Boolean from \"./scalar/Boolean.svelte\";\nimport List from \"./scalar/List.svelte\";\n  import Record from \"./scalar/Record.svelte\";\nimport Select from \"./scalar/Select.svelte\";\nimport Text from \"./scalar/Text.svelte\";\n\n  export let name;\n  export let type;\n  export let value;\n  export let options;\n  export let placeholder;\n</script>\n\n<a href={`https://esbuild.github.io/api/#${name}`} target=\"_blank\">\n  <code>{name}</code>\n</a>\n{#if type === \"boolean\"}\n  <Boolean bind:checked={value} />\n{:else if type === \"record\"}\n  <Record bind:record={value} {placeholder} />\n{:else if type === \"list\"}\n  <List bind:value {placeholder} />\n{:else if type === \"select\"}\n  <Select bind:value {options} {placeholder} />\n{:else if type === \"text\"}\n  <Text bind:value {placeholder} />\n{/if}\n\n<style>\n  a {\n    justify-self: right;\n  }\n  code {\n    white-space: nowrap;\n  }\n</style>\n", "<script>\n  import { onMount } from \"svelte\";\n\n  export let record;\n  export let placeholder;\n\n  let textarea;\n\n  function updateRecord() {\n    let hasValue = false;\n    const result = {};\n    const lines = textarea.value.trim().split(\"\\n\");\n    for (let line of lines) {\n      const [key, value] = line.split(\"=\");\n      if (key && value) {\n        result[key] = value;\n        hasValue = true;\n      }\n    }\n    if (hasValue) {\n      record = result;\n    } else {\n      record = undefined;\n    }\n  }\n\n  onMount(() => {\n    if (record) {\n      textarea.value = Object.entries(record)\n        .map(([k, v]) => `${k}=${v}`)\n        .join(\"\\n\");\n    }\n  });\n</script>\n\n<textarea\n  rows=\"1\"\n  bind:this={textarea}\n  class=\"editor\"\n  {placeholder}\n  on:change={updateRecord}\n/>\n\n<style>\n  textarea {\n    resize: none;\n  }\n</style>\n", "<script>\n  import { onMount } from \"svelte\";\n\n  export let value;\n  export let options;\n  export let placeholder;\n\n  let select;\n\n  function updateValue() {\n    if (select.value === \"true\") {\n      value = true;\n    } else if (select.value) {\n      value = select.value;\n    } else {\n      value = undefined;\n    }\n  }\n\n  onMount(() => {\n    if (value) {\n      select.value = value;\n    }\n  });\n</script>\n\n<select bind:this={select} on:change={updateValue}>\n  {#each options as option}\n    <option value={option}>{option || placeholder || \"\"}</option>\n  {/each}\n</select>\n\n<style>\n  select {\n    color: var(--fg-on);\n    font-family: var(--mono);\n  }\n</style>\n", "<script>\n  import { ready, error } from \"../../stores/esbuild\";\n  import { printError, printWarning } from \"../../helpers/ansi\";\n\n  export let errors, warnings, elapsed;\n\n  // prettier-ignore\n  $: status =\n      !$ready                 ? \"loading\"\n    : $error || errors.length ? \"error\"\n    : warnings.length         ? \"warning\"\n    :                           \"success\";\n</script>\n\n<div class=\"status {status}\">\n  {#if status === \"loading\"}\n    Loading esbuild&hellip;\n  {:else if status === \"success\"}\n    {#if elapsed}\n      Finished in {elapsed}ms.\n    {:else}\n      Ready.\n    {/if}\n  {:else if status === \"error\"}\n    {#if $error}\n      {#await printError($error) then html}\n        {@html html}\n      {/await}\n    {/if}\n    {#if errors.length}\n      {#await printError(errors) then html}\n        {@html html}\n      {/await}\n    {/if}\n  {:else if warnings.length}\n    {#await printWarning(warnings) then html}\n      {@html html}\n    {/await}\n  {/if}\n</div>\n\n<style>\n  .status {\n    padding: calc(var(--gap) * 1.5);\n    font-family: var(--mono);\n    font-size: x-small;\n    white-space: pre-wrap;\n    line-height: 140%;\n    border-radius: var(--gap);\n    background: rgba(127, 127, 127, 0.1);\n    border: 1px solid rgba(127, 127, 127, 0.5);\n    color: var(--pre);\n  }\n</style>\n", "<script>\n  import Layout from \"../Layout.svelte\";\n  import Editor from \"../Editor.svelte\";\n  import Status from \"../Status.svelte\";\n\n  import mode from \"../../../stores/mode\";\n  import { ready, error } from \"../../../stores/esbuild\";\n  import { elapsed, modules, options, outputs } from \"../../../stores/build\";\n  import fs_plugin from \"../../../helpers/fs\";\n\n  let uid = 1;\n\n  function addModule() {\n    if ($modules.length === 0) {\n      $modules = [{ name: \"main.js\", code: \"\", isEntry: true }];\n    } else {\n      const name = `module_${uid++}.js`;\n      $modules = [...$modules, { name, code: \"\", isEntry: false }];\n    }\n    requestAnimationFrame(() => {\n      const editors = document.querySelectorAll(\".input .editor\");\n      const last = editors[editors.length - 1];\n      last?.focus();\n    });\n  }\n\n  function removeModule(i) {\n    $modules = $modules.filter((_, j) => i !== j);\n  }\n\n  function setEntry(i, isEntry) {\n    $modules = $modules.map((e, j) => {\n      if (i === j) e.isEntry = isEntry;\n      return e;\n    });\n  }\n\n  let buildErrors = [];\n  let buildWarnings = [];\n\n  async function build($modules, $options) {\n    try {\n      const entryPoints = $modules.filter((e) => e.isEntry).map((e) => e.name);\n      if (entryPoints.length === 0) {\n        $outputs = [];\n        $elapsed = 0;\n        return;\n      }\n      const timeStart = performance.now();\n      $options = { ...$options };\n      $options.plugins ||= [];\n      $options.plugins.unshift(fs_plugin($modules));\n      const result = await esbuild.build({\n        entryPoints,\n        ...$options,\n        outdir: \"__out__\",\n        write: false,\n      });\n      $elapsed = (performance.now() - timeStart).toFixed(2);\n      $outputs = result.outputFiles.map((file) => {\n        const sliceAt = file.path.lastIndexOf(\"__out__\") + \"__out__\".length + 1;\n        const name = file.path.slice(sliceAt);\n        const code = file.text.replace(/^\\/\\/ fs:/gm, \"// \");\n        return { name, code, isEntry: false };\n      });\n      buildErrors = result.errors;\n      buildWarnings = result.warnings;\n      $error = false;\n    } catch (err) {\n      $outputs = [];\n      if (err.errors) {\n        buildErrors = err.errors;\n        buildWarnings = err.warnings;\n      } else {\n        $error = err;\n      }\n    }\n  }\n\n  $: $ready && $mode === \"build\" && build($modules, $options);\n</script>\n\n<Layout mode=\"build\">\n  <svelte:fragment slot=\"input\">\n    {#each $modules as { name, code, isEntry }, i}\n      <Editor\n        bind:name\n        bind:code\n        {isEntry}\n        on:remove={() => removeModule(i)}\n        on:set-entry={(ev) => setEntry(i, ev.detail)}\n      />\n    {/each}\n    <button on:click={addModule}>\n      <i class=\"i mdi:plus\" />\n      <span>add module</span>\n    </button>\n  </svelte:fragment>\n  <svelte:fragment slot=\"output\">\n    {#each $outputs as { name, code, isEntry }}\n      <Editor {name} {code} {isEntry} readonly />\n    {/each}\n    <Status errors={buildErrors} warnings={buildWarnings} elapsed={$elapsed} />\n  </svelte:fragment>\n</Layout>\n\n<style>\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    border-radius: var(--gap);\n    outline: none;\n    background-color: rgba(127, 127, 127, 0.1);\n    color: var(--fg);\n    padding: calc(var(--gap) * 1.5);\n    cursor: pointer;\n    line-height: 1;\n  }\n  button i {\n    padding: 0.3em;\n  }\n  button:hover {\n    color: var(--fg-on);\n    background-color: rgba(127, 127, 127, 0.2);\n  }\n</style>\n", "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { hljs_action } from \"../../behaviors/hljs\";\n\n  export let name = \"foo.js\";\n  export let code = \"\";\n  export let isEntry = false;\n  export let readonly = false;\n\n  $: loader = name.endsWith(\".js\")\n    ? \"js\"\n    : name.endsWith(\".css\")\n    ? \"css\"\n    : name.endsWith(\".map\")\n    ? \"json\"\n    : \"\";\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<article class=\"module\" class:is-entry={isEntry}>\n  <header>\n    {#if readonly}\n      <div class=\"module-name\">{name}</div>\n    {:else}\n      <input\n        class=\"module-name\"\n        placeholder=\"main.js\"\n        spellcheck=\"false\"\n        bind:value={name}\n        {readonly}\n      />\n      <button class=\"remove\" on:click={() => dispatch(\"remove\")}>\n        <span class=\"label\">remove</span>\n        <i class=\"i mdi:close\" />\n      </button>\n      <button class=\"entry\" on:click={() => dispatch(\"set-entry\", !isEntry)}>\n        <span class=\"label\">(entry&nbsp;module)</span>\n        {#if isEntry}\n          <i class=\"i mdi:minus\" />\n        {:else}\n          <i class=\"i mdi:plus\" />\n        {/if}\n      </button>\n    {/if}\n  </header>\n  {#if readonly}\n    <pre class=\"chunk\" use:hljs_action={{ code, loader }} />\n  {:else}\n    <textarea spellcheck=\"false\" class=\"editor\" bind:value={code} />\n  {/if}\n</article>\n\n<style>\n  article {\n    border: 1px solid rgba(127, 127, 127, 0.5);\n    border-radius: var(--gap);\n  }\n  header {\n    width: 100%;\n    position: relative;\n    border-bottom: 1px solid rgba(127, 127, 127, 0.5);\n  }\n  input {\n    border: none;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    display: block;\n    width: 100%;\n    outline: none;\n    line-height: 1;\n  }\n  .module-name {\n    font: 14px/140% var(--mono);\n    background-color: rgba(127, 127, 127, 0.1);\n    padding: calc(var(--gap) * 1.5);\n    cursor: text;\n  }\n  input:focus {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n  .remove {\n    top: 0;\n  }\n  .entry {\n    bottom: 0;\n  }\n  button {\n    position: absolute;\n    white-space: nowrap;\n    display: inline-flex;\n    align-items: center;\n    right: 0;\n    background-color: transparent;\n    color: var(--fg);\n    border: none;\n    padding: 0;\n    outline: none;\n    cursor: pointer;\n    opacity: 0.4;\n    transition: opacity 0.2s;\n    line-height: 1;\n  }\n  button i {\n    padding: 0.3em;\n  }\n  .label {\n    position: absolute;\n    right: 100%;\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n  button:hover {\n    opacity: 1;\n  }\n  button:hover .label {\n    opacity: 0.6;\n  }\n  .is-entry .entry .label {\n    opacity: 0.6;\n  }\n  .remove {\n    color: var(--red);\n  }\n  textarea {\n    display: block;\n    width: 100%;\n    resize: none;\n    border: 0;\n  }\n  pre {\n    border: 0;\n    white-space: pre-wrap;\n    word-break: break-all;\n    cursor: text;\n    max-height: 80vh;\n  }\n</style>\n"],
  "mappings": "mDAAA,WACE,kCACA,iCACA,0oDAIA,gBACA,kBAGF,GACE,4CACA,cACA,kBACA,mCACA,kCAGF,qBACE,YAGF,qBACE,YAGF,oCACE,YAGF,oBACE,YAGF,uBACE,YAGF,mCACE,YCrCF,MACE,WACA,cACA,qBACA,eACA,iBACA,gBACA,gBACA,mBACA,kBACA,YACA,cACA,oCAGF,KACE,iBACA,aACA,0BACA,4BACA,cACA,kBACA,mBACA,qBAGF,wBACE,4BACA,2BAGF,8BACE,6BAGF,8BACE,2BACA,6BACA,gCAGF,oCACE,2BAGF,oCACE,2BAGF,qCACE,2BAGF,uCACE,gBAGF,yCACE,eAGF,KACE,YACA,aACA,sBAGF,8BACE,mBACA,WACA,cACA,WACA,cACA,YACA,gBACA,gBAGF,sBACE,kBACA,cACA,cACA,WACA,cACA,YACA,gBACA,gBAGF,oCACE,+BACE,kBACA,cACA,cACA,WACA,cACA,YACA,gBACA,iBAIJ,KACE,2BACA,gBAGF,EACE,cAGF,eAEE,mBAGF,IACE,iBAGF,0BAIE,aACA,2BACA,sCACA,yBACA,+BAGF,wBAtIA,SA2IE,2BAGF,SACE,qBACA,qBAGF,OACE,mBAGF,WACE,iBAEF,aACE,mBAEF,YACE,kBAEF,YACE,kBAEF,eACE,qBAEF,cACE,oBAEF,WACE,iBAEF,kBACE,iBACA,4BAEF,oBACE,mBACA,4BAEF,sBACE,mBACA,8BAEF,sBACE,mBACA,8BAEF,oBACE,kBACA,6BAEF,qBACE,mBACA,6BAEF,oBACE,kBACA,6BAEF,qBACE,mBACA,6BAEF,0BACE,qBACA,gCAEF,wBACE,mBACA,gCAEF,wBACE,oBACA,+BAEF,uBACE,mBACA,+BAGF,0CAGE,qBAGF,iDAIE,qBC1KA,qCACE,mDACA,aACA,mBAEF,uCACE,qBAEF,6CACE,mBACA,0BAEF,iCAZA,SAcE,4CACA,oBACA,eAEF,kCACE,YACA,oBAEF,oCACE,kBACA,kBACA,iBACA,eAEF,0CACE,0BAEF,wDACE,eAEF,oDACE,eAEF,gDACE,aAEF,8DACE,mBACA,gBAEF,gCACE,mBACA,4CACA,eAEF,qCACE,qCACE,gCAEF,iCACE,cCxGJ,mBACE,YCyEF,wBACE,cACA,WACA,YACA,YAEF,mBACE,qBACA,qBACA,YACA,gBC9CM,oEAEN,uBAEF,kCACE,aACA,8BACA,wCACA,yBACA,2BAEF,qCACE,kCACE,0BACA,gBAGJ,+BAjBQ,SAmBN,0BACA,gBACA,eACA,iBACA,kBAEF,sCACE,kBACA,QACA,YACA,yBACA,aACA,2BACA,gBACA,oDACA,eACA,eACA,cAEF,4CACE,mBACA,2BACA,mCACA,mBAEF,wFAEE,mBACA,kCAEF,uEAEE,aACA,sBACA,eC2EF,oCACE,kBACA,QACA,SACA,YACA,6BACA,gBACA,8BACA,sCACA,yBACA,iCACA,iBACA,eACA,UACA,gBACA,aACA,gBACA,kBAEF,+BAnBA,SAqBE,eACA,gBACA,uBAEF,qCACE,oCACE,eACA,QACA,WACA,kBAGJ,kCACE,cAEF,+BApCA,SAsCE,gBACA,eAEF,iCACE,qBAEF,uCACE,0BAEF,sCACE,kBACA,MACA,QAlDF,aAoDE,iBACA,6BACA,YACA,aACA,WACA,uBACA,oBACA,mBACA,cACA,eAEF,qCACE,sCACE,eAjEJ,cAqEA,mCACE,kBACA,WACA,UACA,uBAEF,+FAEE,UAEF,qCACE,aACA,+BACA,yCACA,mBACA,gBAEF,8BACE,oBACA,iBACA,eC9PF,oBACE,oBACA,eACA,mBACA,eAEF,mBACE,mBCWF,gBACE,mBAEF,mBACE,mBCUF,wBACE,YCZF,sBACE,mBACA,wBCOF,uBACE,+BACA,wBACA,kBACA,qBACA,iBACA,yBACA,gCACA,sCACA,iBCwDF,mCACE,aACA,mBACA,uBACA,YACA,yBACA,aACA,2BACA,gBACA,+BACA,eACA,cAEF,qCAbA,aAgBA,yCACE,mBACA,2BCvEF,sCACE,sCACA,yBAEF,qCACE,WACA,kBACA,6CAEF,oCACE,YACA,4BACA,6BACA,cACA,WACA,aACA,cAEF,2CACE,2BACA,2BACA,+BACA,YAEF,0CACE,2BAEF,sCACE,MAEF,qCACE,SAEF,qCACE,kBACA,mBACA,oBACA,mBACA,QACA,6BACA,gBACA,YAzCF,UA2CE,aACA,eACA,WACA,uBACA,cAEF,uCAjDA,aAoDA,qCACE,kBACA,WACA,UACA,uBAEF,2CACE,UAEF,wGACE,WAKF,sCACE,iBAEF,uCACE,cACA,WACA,YACA,SAEF,kCACE,SACA,qBACA,qBACA,YACA",
  "names": []
}
