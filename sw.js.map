{
  "version": 3,
  "sources": ["../src/sw.ts"],
  "sourcesContent": ["/// <reference no-default-lib=\"true\" />\n/// <reference lib=\"ESNext\" />\n/// <reference lib=\"WebWorker\" />\n\ndeclare const self: ServiceWorkerGlobalScope\n\nconst cacheName = 'esbuild-repl:v1'\n\nself.oninstall = self.skipWaiting\nself.onactivate = (ev) => ev.waitUntil(self.clients.claim())\nself.onfetch = (ev) => {\n  const url = ev.request.url\n  if (url.endsWith('esbuild.wasm') && !url.includes('latest')) {\n    ev.respondWith(\n      caches.open(cacheName).then(async (cache) => {\n        let response = await cache.match(ev.request)\n        if (!response) {\n          response = await fetch(ev.request)\n          if (response.ok) {\n            cache.put(ev.request, response)\n          }\n        }\n        try {\n          return response.clone()\n        } catch {\n          cache.delete(ev.request)\n          return fetch(ev.request)\n        }\n      }),\n    )\n  }\n}\n\nexport type {}\n"],
  "mappings": "AAMA,IAAMA,EAAY,kBAElB,KAAK,UAAY,KAAK,YACtB,KAAK,WAAcC,GAAOA,EAAG,UAAU,KAAK,QAAQ,MAAM,CAAC,EAC3D,KAAK,QAAWA,GAAO,CACrB,IAAMC,EAAMD,EAAG,QAAQ,IACnBC,EAAI,SAAS,cAAc,GAAK,CAACA,EAAI,SAAS,QAAQ,GACxDD,EAAG,YACD,OAAO,KAAKD,CAAS,EAAE,KAAK,MAAOG,GAAU,CAC3C,IAAIC,EAAW,MAAMD,EAAM,MAAMF,EAAG,OAAO,EACtCG,IACHA,EAAW,MAAM,MAAMH,EAAG,OAAO,EAC7BG,EAAS,IACXD,EAAM,IAAIF,EAAG,QAASG,CAAQ,GAGlC,GAAI,CACF,OAAOA,EAAS,MAAM,CACxB,MAAE,CACA,OAAAD,EAAM,OAAOF,EAAG,OAAO,EAChB,MAAMA,EAAG,OAAO,CACzB,CACF,CAAC,CACH,CAEJ",
  "names": ["cacheName", "ev", "url", "cache", "response"],
  "x_google_ignoreList": []
}
