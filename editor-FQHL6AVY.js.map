{
  "version": 3,
  "sources": ["../src/helpers/ed.ts", "../src/behaviors/editor.ts"],
  "sourcesContent": ["// stolen from github's source code :p\nimport autosize from \"@github/textarea-autosize\";\n\nexport function fire(target: Element, name: string, detail?: any) {\n  return target.dispatchEvent(\n    new CustomEvent(name, { bubbles: true, cancelable: true, detail })\n  );\n}\n\ntype UpdatedText = {\n  text: string;\n  selection: SelectionRange;\n};\n\ntype SelectionRange = [number | null, number | null];\n\nconst INDENTATION_RE = /^(\\s*)/;\nfunction addSortNewLine(\n  text: string,\n  selection: SelectionRange,\n  at: \"here\" | \"begin\" | \"end\"\n): UpdatedText | undefined {\n  const offset = selection[0];\n  if (!offset || !text) return undefined;\n  const selectionEnd = selection[1] || offset;\n\n  const lines = text.slice(0, offset).split(\"\\n\");\n  const currentLine = lines[lines.length - 1];\n  const match = currentLine?.match(INDENTATION_RE);\n  if (!match) return undefined;\n\n  const indentation = match[1] || \"\";\n  const insert = `\\n${indentation}`;\n\n  if (at === \"here\") {\n    return {\n      text: text.slice(0, offset) + insert + text.slice(selectionEnd),\n      selection: [offset + insert.length, selectionEnd + insert.length],\n    };\n  } else if (at === \"begin\") {\n    const begin = offset - currentLine.length;\n    return {\n      text: text.slice(0, begin) + `${indentation}\\n` + text.slice(begin),\n      selection: [begin + indentation.length, begin + indentation.length],\n    };\n  } else {\n    const end_ = text.indexOf(\"\\n\", selectionEnd);\n    const end = end_ < 0 ? text.length : end_;\n    return {\n      text: text.slice(0, end) + insert + text.slice(end),\n      selection: [end + insert.length, end + insert.length],\n    };\n  }\n}\n\nfunction indent(\n  text: string,\n  selection: SelectionRange,\n  substract: boolean\n): UpdatedText | undefined {\n  const selectionStart = selection[0] || 0;\n  const selectionEnd = selection[1] || selectionStart;\n  if (selection[0] === null) return undefined;\n\n  if (selectionStart === selectionEnd) {\n    if (substract) {\n      const lines = text.slice(0, selectionEnd).split(\"\\n\");\n      const currentLine = lines[lines.length - 1];\n      const match = currentLine?.match(INDENTATION_RE);\n      if (!match) return undefined;\n\n      let indentation = match[0];\n      const indent = indentation.length;\n      const lineText = currentLine.slice(indentation.length);\n      indentation = indentation.slice(0, -2);\n      const diff = indent - indentation.length;\n      lines[lines.length - 1] = indentation + lineText;\n\n      return {\n        text: lines.join(\"\\n\") + text.slice(selectionEnd),\n        selection: [selectionEnd - diff, selectionEnd - diff],\n      };\n    } else {\n      return {\n        text: text.slice(0, selectionStart) + \"  \" + text.slice(selectionEnd),\n        selection: [selectionEnd + 2, selectionEnd + 2],\n      };\n    }\n  }\n\n  const startOffset = text.slice(0, selectionStart).lastIndexOf(\"\\n\") + 1;\n  const endOffset_ = text.indexOf(\"\\n\", selectionEnd - 1);\n  const endOffset = endOffset_ > 0 ? endOffset_ : text.length - 1;\n  const selectedLines = text.slice(startOffset, endOffset).split(\"\\n\");\n\n  let startUpdated = false;\n  let selectionStartDiff = 0;\n  let selectionEndDiff = 0;\n  const updatedSelectedLines: string[] = [];\n  for (const line of selectedLines) {\n    const match = line.match(INDENTATION_RE);\n    if (match) {\n      let indentation = match[0];\n      const lineText = line.slice(indentation.length);\n      if (substract) {\n        const prevLength = indentation.length;\n        indentation = indentation.slice(0, -2);\n        selectionStartDiff = startUpdated\n          ? selectionStartDiff\n          : indentation.length - prevLength;\n        startUpdated = true;\n        selectionEndDiff += indentation.length - prevLength;\n      } else {\n        indentation += \"  \";\n        selectionStartDiff = 2;\n        selectionEndDiff += 2;\n      }\n      updatedSelectedLines.push(indentation + lineText);\n    }\n  }\n\n  const linesString = updatedSelectedLines.join(\"\\n\");\n  const newText =\n    text.slice(0, startOffset) + linesString + text.slice(endOffset);\n  const newRange: SelectionRange = [\n    Math.max(startOffset, selectionStart + selectionStartDiff),\n    selectionEnd + selectionEndDiff,\n  ];\n  return { text: newText, selection: newRange };\n}\n\nfunction deselectText(ev: Event) {\n  const event = ev as KeyboardEvent;\n  const element = event.target as HTMLInputElement;\n  if (element.selectionDirection === \"backward\") {\n    element.selectionEnd = element.selectionStart;\n  } else {\n    element.selectionStart = element.selectionEnd;\n  }\n}\n\nlet isIMEVisible = false;\n\nfunction onCompositionStart() {\n  isIMEVisible = true;\n}\n\nfunction onCompositionEnd() {\n  isIMEVisible = false;\n}\n\nfunction updateText(\n  element: HTMLInputElement,\n  result: UpdatedText,\n  event: KeyboardEvent\n) {\n  element.value = result.text;\n  element.selectionStart = result.selection[0];\n  element.selectionEnd = result.selection[1];\n\n  event.preventDefault();\n  fire(element, \"change\");\n}\n\nfunction handleEnter(ev: Event) {\n  if (isIMEVisible) {\n    return;\n  }\n\n  const event = ev as KeyboardEvent;\n\n  if (event.key === \"Enter\") {\n    const element = event.target as HTMLInputElement;\n\n    let at: \"here\" | \"begin\" | \"end\" | undefined;\n    const ctrl = event.metaKey || event.ctrlKey;\n    const shift = event.shiftKey;\n    if (shift && !ctrl) {\n      at = \"here\";\n    } else if (ctrl && !shift) {\n      at = \"end\";\n    } else if (ctrl && shift) {\n      at = \"begin\";\n    }\n    if (!at) return;\n\n    const result = addSortNewLine(\n      element.value,\n      [element.selectionStart, element.selectionEnd],\n      at\n    );\n    if (result === undefined) return;\n\n    updateText(element, result, event);\n  }\n}\n\nfunction updateIndentation(ev: Event) {\n  if (isIMEVisible) {\n    return;\n  }\n\n  const event = ev as KeyboardEvent;\n  if (event.key === \"Escape\") {\n    deselectText(ev);\n    return;\n  }\n\n  if (event.key !== \"Tab\") return;\n\n  const element = event.target as HTMLInputElement;\n  const result = indent(\n    element.value,\n    [element.selectionStart, element.selectionEnd],\n    event.shiftKey\n  );\n  if (result === undefined) return;\n\n  updateText(element, result, event);\n}\n\nexport function subscribe(el: Element) {\n  el.addEventListener(\"keydown\", updateIndentation);\n  el.addEventListener(\"keydown\", handleEnter);\n  el.addEventListener(\"compositionstart\", onCompositionStart);\n  el.addEventListener(\"compositionend\", onCompositionEnd);\n  const { unsubscribe } = autosize(el);\n  return {\n    unsubscribe: () => {\n      el.removeEventListener(\"keydown\", updateIndentation);\n      el.removeEventListener(\"keydown\", handleEnter);\n      el.removeEventListener(\"compositionstart\", onCompositionStart);\n      el.removeEventListener(\"compositionend\", onCompositionEnd);\n      unsubscribe();\n    },\n  };\n}\n", "import { observe } from \"selector-observer\";\nimport { subscribe } from \"../helpers/ed\";\n\nobserve(\"textarea.editor\", { subscribe });\n"],
  "mappings": "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",
  "names": []
}
