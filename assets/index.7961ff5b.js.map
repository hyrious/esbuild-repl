{"version":3,"file":"index.7961ff5b.js","sources":["../../vite/preload-helper","../../main.ts"],"sourcesContent":["let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import type { TransformOptions } from \"esbuild\";\n\ntype esbuild_t = typeof import(\"esbuild\");\n\nconst $ = (sel: string) => document.querySelector(sel)!;\n\nfunction leave(el: Element, ms = 200) {\n    el.classList.add(\"leave\", \"leave-active\");\n    requestAnimationFrame(() => {\n        el.classList.remove(\"leave\");\n        el.classList.add(\"leave-to\");\n    });\n    setTimeout(() => el.remove(), ms);\n}\n\nconst JsDelivrAPI = \"https://data.jsdelivr.com/v1/package/npm/esbuild-wasm\";\nconst urlPrefix = \"https://cdn.jsdelivr.net/npm/esbuild-wasm\";\nconst urls = {\n    // prettier-ignore\n    browser: (version: string) => `${urlPrefix}@${version}/esm/browser.js`,\n    wasm: (version: string) => `${urlPrefix}@${version}/esbuild.wasm`,\n};\n\nlet esbuild: esbuild_t | undefined;\nconst utils = {\n    async fetchVersion() {\n        const r = await fetch(JsDelivrAPI).then((r) => r.json());\n        const version = r.tags.latest;\n        localStorage.setItem(\"esbuild-repl\", `${version}:${Date.now()}`);\n        return version;\n    },\n    async version() {\n        const raw = localStorage.getItem(\"esbuild-repl\");\n        if (raw) {\n            const [version, time] = raw.split(\":\", 2);\n            if (Date.now() - +time < 86400 * 7 * 1000) {\n                return version;\n            }\n        }\n        return this.fetchVersion();\n    },\n    async esbuild(version: string) {\n        esbuild = (await import(/* @vite-ignore */ urls.browser(version))) as esbuild_t;\n        await esbuild.initialize({ wasmURL: urls.wasm(version) });\n    },\n    dashize(str: string) {\n        return str.replace(/([A-Z])/g, (x) => \"-\" + x.toLowerCase());\n    },\n    camelize(str: string) {\n        return str.replace(/-([a-z])/g, (x) => x.substring(1).toUpperCase());\n    },\n    cfg2cli(config: Record<string, any>) {\n        const options: string[] = [];\n        for (const key in config) {\n            const value = config[key as keyof TransformOptions];\n            if (Array.isArray(value)) {\n                for (const e of value) {\n                    options.push(`--${this.dashize(key)}:${e}`);\n                }\n            } else if (value instanceof Object) {\n                for (const [k, v] of Object.entries(value)) {\n                    options.push(`--${this.dashize(key)}:${k}=${v}`);\n                }\n            } else if (value === true) {\n                options.push(`--${this.dashize(key)}`);\n            } else {\n                options.push(`--${this.dashize(key)}=${value}`);\n            }\n        }\n        return options.join(\" \");\n    },\n    cli2cfg(line: string) {\n        const config: Record<string, any> = {};\n        for (const piece of line.split(/\\s+/)) {\n            if (!piece.startsWith(\"--\")) continue;\n            const a = piece.substring(2);\n            const colon = a.indexOf(\":\");\n            const equal = a.indexOf(\"=\");\n            if (colon === -1 && equal === -1) {\n                config[this.camelize(a)] = true;\n            } else {\n                if (colon !== -1 && colon < equal) {\n                    const key = a.substring(0, colon);\n                    const [k, v] = a.substring(colon + 1).split(\"=\", 2);\n                    config[this.camelize(key)] ||= {};\n                    config[this.camelize(key)][k] = v;\n                } else if (colon !== -1 && equal === -1) {\n                    const [key, value] = a.split(\":\", 2);\n                    config[this.camelize(key)] ||= [];\n                    config[this.camelize(key)].push(value);\n                } else {\n                    const [key, value] = a.split(\"=\", 2);\n                    const val = { true: true, false: false }[value] || value;\n                    config[this.camelize(key)] = val;\n                }\n            }\n        }\n        return config;\n    },\n    showError(message: string) {\n        const el = $(\"#error\") as HTMLElement;\n        el.style.display = \"\";\n        el.textContent = message;\n    },\n    hideError() {\n        const el = $(\"#error\") as HTMLElement;\n        el.style.display = \"none\";\n    },\n};\n\n(async function () {\n    $('#theme').addEventListener('click', () => {\n        document.body.classList.toggle('light');\n    });\n    const version = await utils.version();\n    $(\"#version\").textContent = version;\n    await utils.esbuild(version);\n    leave($(\"#mask\"));\n\n    (window as any).esbuild = esbuild;\n\n    let config: Record<string, any> = {\n        loader: \"tsx\",\n    };\n\n    $(\"#config\").addEventListener(\"change\", (e) => {\n        const el = e.target as HTMLInputElement;\n        config = utils.cli2cfg(el.value);\n        el.value = utils.cfg2cli(config);\n        refresh();\n    });\n\n    $(\"#editor\").addEventListener(\"keydown\", (e) => {\n        if ((e as KeyboardEvent).key === \"Tab\") {\n            e.preventDefault();\n            const textarea = e.target as HTMLTextAreaElement;\n            const code = textarea.value;\n            const before = code.substring(0, textarea.selectionStart);\n            const endPos = textarea.selectionEnd;\n            const after = code.substring(endPos);\n            textarea.value = before + \"    \" + after;\n            textarea.selectionStart = textarea.selectionEnd = endPos + 4;\n        }\n    });\n\n    async function refresh(first = false) {\n        const code = ($(\"#editor\") as HTMLTextAreaElement).value;\n        try {\n            const t = performance.now();\n            const result = await esbuild?.transform(code, config);\n            const duration = performance.now() - t;\n            if (result) {\n                ($(\"#output\") as HTMLTextAreaElement).value = result.code;\n                utils.hideError();\n                if (!first) $(\"#duration\").textContent = duration.toFixed(2) + \"ms\";\n            }\n        } catch (e) {\n            utils.showError(e.message);\n        }\n    }\n\n    $(\"#editor\").addEventListener(\"input\", () => refresh(false));\n\n    refresh(true);\n})().catch((reason) => {\n    console.error(reason);\n    $(\"#mask\").textContent = reason?.message || reason;\n});\n"],"names":["scriptRel","seen","$","sel","document","querySelector","urlPrefix","urls","version","esbuild","utils","fetch","then","r2","json","tags","latest","setItem","Date","now","raw","localStorage","getItem","time","split","this","fetchVersion","baseModule","deps","relList","createElement","supports","Promise","all","map","dep","isCss","endsWith","cssSelector","link","rel","as","crossOrigin","href","head","appendChild","res","rej","addEventListener","__vitePreload","initialize","wasmURL","dashize","str","replace","x","toLowerCase","camelize","substring","toUpperCase","[object Object]","config","options","key","value","Array","isArray","e","push","Object","k","v","entries","join","line","piece","startsWith","a","colon","indexOf","equal","val","true","false","message","el","style","display","textContent","body","classList","toggle","ms","add","remove","loader","first","code","t","performance","result","transform","duration","hideError","toFixed","showError","target","cli2cfg","cfg2cli","preventDefault","textarea","before","selectionStart","endPos","selectionEnd","after","refresh","catch","reason","error"],"mappings":"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"}